; You can use public or auth-req indistinctly to indicate if an authentication is required for the section.
;
;    param    | value       | auth required
;    --------------------------------
;    public   | not present | NO
;    public   | true        | NO
;    public   | false       | YES
;    auth-req | not present | NO
;    auth-req | true        | YES
;    auth-req | false       | NO
;
; script:
;   if empty then will load last section name php file
;   sample: [api/login/] will load [sources_folder_configured]/api/login/login.php
[mirouterconfig]
;session_checker
; Script to check if the session is valid,
; if not defined then fallback on hosts.ini session_checker key
; the script must have a function called like the basename of its value:
; example: session_checker=my_ses.checker.php => function my_ses_checked()
; the function must return an object with one or two props:
;     return (object)[
;        'returnCode'    => Router::RETCODE_AUTHREQ,
;        'returnReason'  => 'Authentication required'
;    ];
;     return (object)[
;        'returnCode'    => Router::RETCODE_OK
;    ];
session_checker=my_session_checker.php

[main]
auth-req=false
script=web/main.html

[contact]
auth-req=false
script=web/contact.html

[client/subscription]
public=true
script=api/client/subscription.php

[auth]
public=true
script=api/authenticate_by_apikey.php

[users/search]
public=false
script=api/users/search.php

[invoice/create]
public=false
script=api/invoices/add.php
